// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: json_reflection.proto
#ifndef GRPC_json_5freflection_2eproto__INCLUDED
#define GRPC_json_5freflection_2eproto__INCLUDED

#include "json_reflection.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace json_reflection {

class JsonReflectionService final {
 public:
  static constexpr char const* service_full_name() {
    return "json_reflection.JsonReflectionService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::json_reflection::JsonFieldResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>> AsyncGetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>>(AsyncGetJsonFieldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>> PrepareAsyncGetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>>(PrepareAsyncGetJsonFieldRaw(context, request, cq));
    }
    virtual ::grpc::Status ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::json_reflection::FieldList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>> AsyncListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>>(AsyncListFieldsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>> PrepareAsyncListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>>(PrepareAsyncListFieldsRaw(context, request, cq));
    }
    virtual ::grpc::Status ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::json_reflection::OperationStatus* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>> AsyncModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>>(AsyncModifyFieldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>> PrepareAsyncModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>>(PrepareAsyncModifyFieldRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>* AsyncGetJsonFieldRaw(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::JsonFieldResponse>* PrepareAsyncGetJsonFieldRaw(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>* AsyncListFieldsRaw(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::FieldList>* PrepareAsyncListFieldsRaw(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>* AsyncModifyFieldRaw(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::json_reflection::OperationStatus>* PrepareAsyncModifyFieldRaw(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::json_reflection::JsonFieldResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>> AsyncGetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>>(AsyncGetJsonFieldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>> PrepareAsyncGetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>>(PrepareAsyncGetJsonFieldRaw(context, request, cq));
    }
    ::grpc::Status ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::json_reflection::FieldList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>> AsyncListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>>(AsyncListFieldsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>> PrepareAsyncListFields(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>>(PrepareAsyncListFieldsRaw(context, request, cq));
    }
    ::grpc::Status ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::json_reflection::OperationStatus* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>> AsyncModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>>(AsyncModifyFieldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>> PrepareAsyncModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>>(PrepareAsyncModifyFieldRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response, std::function<void(::grpc::Status)>) override;
      void GetJsonField(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response, std::function<void(::grpc::Status)>) override;
      void ListFields(::grpc::ClientContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response, std::function<void(::grpc::Status)>) override;
      void ModifyField(::grpc::ClientContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>* AsyncGetJsonFieldRaw(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::json_reflection::JsonFieldResponse>* PrepareAsyncGetJsonFieldRaw(::grpc::ClientContext* context, const ::json_reflection::JsonFieldRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>* AsyncListFieldsRaw(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::json_reflection::FieldList>* PrepareAsyncListFieldsRaw(::grpc::ClientContext* context, const ::json_reflection::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>* AsyncModifyFieldRaw(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::json_reflection::OperationStatus>* PrepareAsyncModifyFieldRaw(::grpc::ClientContext* context, const ::json_reflection::FieldModification& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetJsonField_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFields_;
    const ::grpc::internal::RpcMethod rpcmethod_ModifyField_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetJsonField(::grpc::ServerContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response);
    virtual ::grpc::Status ListFields(::grpc::ServerContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response);
    virtual ::grpc::Status ModifyField(::grpc::ServerContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetJsonField() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJsonField(::grpc::ServerContext* context, ::json_reflection::JsonFieldRequest* request, ::grpc::ServerAsyncResponseWriter< ::json_reflection::JsonFieldResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListFields() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFields(::grpc::ServerContext* context, ::json_reflection::Empty* request, ::grpc::ServerAsyncResponseWriter< ::json_reflection::FieldList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ModifyField() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestModifyField(::grpc::ServerContext* context, ::json_reflection::FieldModification* request, ::grpc::ServerAsyncResponseWriter< ::json_reflection::OperationStatus>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetJsonField<WithAsyncMethod_ListFields<WithAsyncMethod_ModifyField<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetJsonField() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::json_reflection::JsonFieldRequest, ::json_reflection::JsonFieldResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::json_reflection::JsonFieldRequest* request, ::json_reflection::JsonFieldResponse* response) { return this->GetJsonField(context, request, response); }));}
    void SetMessageAllocatorFor_GetJsonField(
        ::grpc::MessageAllocator< ::json_reflection::JsonFieldRequest, ::json_reflection::JsonFieldResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::json_reflection::JsonFieldRequest, ::json_reflection::JsonFieldResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetJsonField(
      ::grpc::CallbackServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListFields() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::json_reflection::Empty, ::json_reflection::FieldList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::json_reflection::Empty* request, ::json_reflection::FieldList* response) { return this->ListFields(context, request, response); }));}
    void SetMessageAllocatorFor_ListFields(
        ::grpc::MessageAllocator< ::json_reflection::Empty, ::json_reflection::FieldList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::json_reflection::Empty, ::json_reflection::FieldList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFields(
      ::grpc::CallbackServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ModifyField() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::json_reflection::FieldModification, ::json_reflection::OperationStatus>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::json_reflection::FieldModification* request, ::json_reflection::OperationStatus* response) { return this->ModifyField(context, request, response); }));}
    void SetMessageAllocatorFor_ModifyField(
        ::grpc::MessageAllocator< ::json_reflection::FieldModification, ::json_reflection::OperationStatus>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::json_reflection::FieldModification, ::json_reflection::OperationStatus>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ModifyField(
      ::grpc::CallbackServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetJsonField<WithCallbackMethod_ListFields<WithCallbackMethod_ModifyField<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetJsonField() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListFields() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ModifyField() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetJsonField() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJsonField(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListFields() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFields(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ModifyField() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestModifyField(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetJsonField() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetJsonField(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetJsonField(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListFields() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListFields(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFields(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ModifyField() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ModifyField(context, request, response); }));
    }
    ~WithRawCallbackMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ModifyField(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetJsonField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetJsonField() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::json_reflection::JsonFieldRequest, ::json_reflection::JsonFieldResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::json_reflection::JsonFieldRequest, ::json_reflection::JsonFieldResponse>* streamer) {
                       return this->StreamedGetJsonField(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetJsonField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetJsonField(::grpc::ServerContext* /*context*/, const ::json_reflection::JsonFieldRequest* /*request*/, ::json_reflection::JsonFieldResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetJsonField(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::json_reflection::JsonFieldRequest,::json_reflection::JsonFieldResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFields : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListFields() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::json_reflection::Empty, ::json_reflection::FieldList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::json_reflection::Empty, ::json_reflection::FieldList>* streamer) {
                       return this->StreamedListFields(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListFields() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFields(::grpc::ServerContext* /*context*/, const ::json_reflection::Empty* /*request*/, ::json_reflection::FieldList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFields(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::json_reflection::Empty,::json_reflection::FieldList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ModifyField : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ModifyField() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::json_reflection::FieldModification, ::json_reflection::OperationStatus>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::json_reflection::FieldModification, ::json_reflection::OperationStatus>* streamer) {
                       return this->StreamedModifyField(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ModifyField() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ModifyField(::grpc::ServerContext* /*context*/, const ::json_reflection::FieldModification* /*request*/, ::json_reflection::OperationStatus* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedModifyField(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::json_reflection::FieldModification,::json_reflection::OperationStatus>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetJsonField<WithStreamedUnaryMethod_ListFields<WithStreamedUnaryMethod_ModifyField<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetJsonField<WithStreamedUnaryMethod_ListFields<WithStreamedUnaryMethod_ModifyField<Service > > > StreamedService;
};

}  // namespace json_reflection


#endif  // GRPC_json_5freflection_2eproto__INCLUDED
